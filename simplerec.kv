#:import MapView kivy_garden.mapview.MapView
#:import GpsBlinker gpsblinker.GpsBlinker
#:include gpsblinker.kv

<SimpleRec>:

    record_table: record_table
    blinker: blinker

    MapView:
        id: map
        lat: 48
        lon: 7.82
        zoom: 11
        GpsBlinker:
            id: blinker

    # Buttons free on the screen
    MDFloatLayout:
        MDFloatingActionButton:
            id: show_input_button
            icon: 'plus'
            pos_hint: {'center_x': 0.9, "center_y": 0.95}
            md_bg_color: app.theme_cls.accent_color
            on_press: root.show_input_field(input_field, show_input_button)

        MDFloatingActionButton:
            id: show_records_button
            icon: 'view-headline'
            pos_hint: {'center_x': 0.1, "center_y": 0.05}
            md_bg_color: app.theme_cls.accent_color
            on_press: root.show_record_table(record_table_layout, show_records_button)

        MDFloatingActionButton:
            id: customize_points
            icon: 'palette'
            pos_hint: {'center_x': 0.25, 'center_y':0.05}
            md_bg_color: app.theme_cls.accent_color
            #on_press: root.ids.ddt.open(self)

        MDFloatingActionButton:
            id: set_map_button
            icon: 'layers'
            pos_hint: {'center_x': 0.4, "center_y": 0.05}
            md_bg_color: app.theme_cls.accent_color
            on_press: root.map_dropdown.open()


        #MDDropdownMenu:
            #id: ddt
            #text: "ösösö"


    # TextFields, Tables and other things popping up when called.
    # Records Table
    MDBoxLayout:
        id: record_table_layout
        orientation: 'vertical'
        size_hint: 1, .4
        pos: 0, -self.height
        padding: 2

        canvas.before:
            Color:
                rgba: 1, 1, 1, .8
            Rectangle:
                pos: self.pos
                size: self.size

        MDScrollView:
            MDList:
                id: record_table

    # Data input Field
    MDBoxLayout:
        id: input_field
        orientation: 'vertical'
        adaptive_height: True
        pos: 0, root.height
        padding: 20
        spacing: 10

        canvas:
            Color:
                rgba: 1, 1, 1, .8
            Rectangle:
                pos: self.pos
                size: self.size

        MDBoxLayout:
            orientation: 'horizontal'
            adaptive_height: True
            spacing: 10

            MDTextField:
                id: date
                hint_text: "Date of record"
                helper_text: "Choose the date!"

            MDFloatingActionButton:
                icon: "calendar"
                on_press: root.show_date_picker()

            MDTextField:
                id: time
                hint_text: "Time of record"
                helper_text: "Choose the time!"
                validator: 'time'

            MDFloatingActionButton:
                icon: "clock"
                on_press: root.show_time_picker()

        MDTextField:
            id: tf
            hint_text: "Enter Species"
            helper_text: "Type in the scientific or vernacular name of the species you like to record"
            on_text: root.create_suggestions(*args)
            on_text_validate: root.ids.abundance.focus = True

        MDCard:
            size_hint_y: None
            size: root.width, "130dp"
            md_bg_color: app.theme_cls.accent_color[0], app.theme_cls.accent_color[1], app.theme_cls.accent_color[2], 0.5

            MDStackLayout:
                id: word_suggests
                padding: "8dp"
                spacing: "2dp"

        MDTextField:
            id: abundance
            text: "1"
            hint_text: "Abundance"
            helper_text: "Type in how many individually you saw"
            on_text_validate:
                root.add_points()
                root.ids.tf.focus = True

        MDBoxLayout:
            orientation: 'horizontal'
            adaptive_height: True
            size_hint_x: 1
            pos_hint: {'center_x': 0.5} #does not do what it should do...
            spacing: 3

            MDFillRoundFlatButton:
                text: "Add point"
                size_hint_x: 0.33
                on_release: root.add_points()

            MDFillRoundFlatButton:
                text: "Save to disc"
                size_hint_x: 0.33
                on_release: root.save_records()

            MDFillRoundFlatButton:
                text: "Back to Menu"
                size_hint_x: 0.33
                on_release:
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'

<PointCreator>:
    point_size: 50
    point_color: [.9, .1, .2, 1]

    source: 'images/transparent_marker.png' #is responsible for the field which enables a widget to be shown by press
    anchor_x: 0.5
    anchor_y: 0.5
    canvas:
        Color:
            rgba: root.point_color
        RoundedRectangle:
            radius: [root.point_size/2, ]
            size: root.point_size, root.point_size
            pos: root.pos[0] + root.size[0]/2 - root.point_size/2, root.pos[1] + root.size[1]/2 - root.point_size/2
    on_release: self.info_popup()